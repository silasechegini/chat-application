{"version":3,"sources":["components/LoginForm.jsx","components/MessageForm.jsx","components/MyMessage.jsx","components/TheirMessage.jsx","components/ChatFeed.jsx","App.js","index.js"],"names":["LoginForm","useState","username","setUsername","password","setPassword","error","setError","handleSubmit","e","a","preventDefault","authObject","axios","get","headers","localStorage","setItem","window","location","reload","className","style","class","onSubmit","type","value","onChange","target","placeholder","required","align","marginTop","color","MessageForm","props","setValue","chatId","creds","userName","event","text","trim","length","sendMessage","status","isTyping","htmlFor","PictureOutlined","multiple","id","display","files","SendOutlined","MyMessage","message","attachments","src","file","alt","float","marginRight","backgroundColor","TheirMessage","lastMessage","isFirstMessageByUser","sender","backgroundImage","avatar","marginLeft","ChatFeed","chats","activeChat","messages","chat","setStatus","renderReadReceipts","isMyMessage","people","map","person","index","last_read","renderMessages","keys","Object","key","lastMessageKey","handleStatus","user","console","log","addEventListener","setTimeout","title","height","onStatus","App","getItem","projectID","userSecret","renderChatFeed","chatAppProps","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d05765b8.chunk.js","sourcesContent":["import { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst LoginForm = () => {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n         //username / password => chatengine -> give messages\r\n         //works ? logged in\r\n         // no? try with new username\r\n\r\n         const authObject = {'Project-ID': \"e78b3fc4-b46a-4518-8814-dc5384123473\", 'User-Name': username, 'User-Secret': password };\r\n\r\n         try {\r\n             await axios.get('https://api.chatengine.io/chats', { headers: authObject });\r\n             localStorage.setItem('username', username);\r\n             localStorage.setItem('password', password);\r\n\r\n             window.location.reload();\r\n         }catch (error) {\r\n            setError('Oops, wrong credentials, try again')\r\n         }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <div className=\"form\">\r\n                <h1 className=\"title\" style={{\"fontFamily\":\"Mogra\", \"color\":\"purple\"}}>Login here <i class=\"fas fa-grin-beam\"></i></h1>\r\n                <form onSubmit={ handleSubmit }>\r\n                    <input type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)} className=\"input\" placeholder=\"Username\" required />\r\n                    <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} className=\"input\" placeholder=\"Password\" required />\r\n                    <div align=\"center\">\r\n                        <button type=\"submit\" className=\"button title\">\r\n                            <p style={{\"fontFamily\":\"Mogra\", \"color\":\"purple\"}}>Chat away! ... <i class=\"fas fa-paper-plane\"></i></p>\r\n                        </button>\r\n                    </div>\r\n                    <div align=\"center\" style={{marginTop: \"2em\", color: \"red\"}}>\r\n                        <h2>{error}</h2>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginForm","import {useState} from 'react';\r\nimport {sendMessage, isTyping} from 'react-chat-engine';\r\nimport {SendOutlined, PictureOutlined } from '@ant-design/icons';\r\n\r\nconst MessageForm = (props) => {\r\n    const [value, setValue] = useState('');\r\n    const {chatId, creds, userName} = props;\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const text = value.trim();\r\n\r\n        if(text.length > 0) sendMessage(creds, chatId, {text});\r\n\r\n        setValue(' ');\r\n\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        setValue(event.target.value);\r\n        isTyping(props, chatId);\r\n    }\r\n\r\n    const handleUpload = (event) => {\r\n        sendMessage(creds, chatId, {files: event.target.files, text: ''})\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <p>{props.status}</p>\r\n            <form className=\"message-form\" onSubmit={handleSubmit}>\r\n                <input \r\n                    className=\"message-input\"\r\n                    placeholder=\"send a message\"\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                    onSubmit={handleSubmit}\r\n                />\r\n\r\n                <label htmlFor=\"upload-button\">\r\n                    <span className=\"image-button\">\r\n                        <PictureOutlined className=\"picture-icon\" />\r\n                    </span>\r\n                </label>\r\n                <input \r\n                    type=\"file\"\r\n                    multiple={false}\r\n                    id=\"upload-button\"\r\n                    style={{display: 'none'}}\r\n                    onChange={handleUpload}\r\n                />\r\n\r\n                <button type=\"submit\" className=\"send-button\">\r\n                    <SendOutlined className=\"send-icon\" />\r\n                </button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MessageForm;","const MyMessage = ({message}) => {\r\n    if( message?.attachments?.length > 0) {\r\n        return (\r\n            <img \r\n                src={message.attachments[0].file}\r\n                alt=\"message-attachment\"\r\n                className=\"message-image\"\r\n                style={{ float: 'right' }}\r\n            />\r\n        )\r\n    }\r\n    \r\n    return (\r\n        <div className=\"message\" style={{float: 'right', marginRight: '18px', color: 'white', backgroundColor: '#3B2A50'}}>\r\n            {message.text}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyMessage;","const TheirMessage = ({lastMessage, message}) => {\r\n    const isFirstMessageByUser =! lastMessage || lastMessage.sender.username !== message.sender.username ;\r\n\r\n    return (\r\n        <div className=\"message-row\">\r\n            {isFirstMessageByUser && (\r\n                <div \r\n                    className=\"message-avatar\"\r\n                    style={{backgroundImage: `url(${message?.sender?.avatar})`}}\r\n                />\r\n            )}\r\n            {\r\n                message?.attachments?.length > 0\r\n                    ?(\r\n                        <img \r\n                            src={message.attachments[0].file}\r\n                            alt=\"message-attachment\"\r\n                            className=\"message-image\"\r\n                            style={{ marginLeft: isFirstMessageByUser ? '4px' : '48px' }}\r\n                        />\r\n                    ) : (\r\n                            <div className=\"message\" style={{float: 'left', backgroundColor: '#CABCDC', marginLeft: isFirstMessageByUser ? '4px' : '48px'}}>\r\n                                {message.text}\r\n                            </div>\r\n                        )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TheirMessage;","import { useState } from 'react';\r\nimport MessageForm from './MessageForm';\r\nimport MyMessage from './MyMessage';\r\nimport TheirMessage from './TheirMessage';\r\n\r\n\r\nconst ChatFeed = (props) => {\r\n\r\n    const {chats, activeChat, userName, messages} = props;\r\n\r\n    const chat = chats && chats[activeChat];\r\n\r\n    const [status, setStatus] = useState(\"\");\r\n\r\n    const renderReadReceipts = (message, isMyMessage) => {\r\n        return chat.people.map((person, index) => person.last_read === message.id && (\r\n            <div \r\n                key={`read_${index}`}\r\n                className=\"read-receipt\"\r\n                style={{float: isMyMessage? 'right' : 'left', backgroundImage: `url(${person?.person?.avatar})`}}\r\n            />\r\n        ))\r\n    }\r\n\r\n    const renderMessages = () => {\r\n        const keys = Object.keys(messages);\r\n\r\n        return keys.map((key, index) => {\r\n            const message = messages[key];\r\n            const lastMessageKey = index === 0? null : keys[index - 1];\r\n            const isMyMessage = userName === message.sender.username;\r\n\r\n            return (\r\n                <div key={`msg_${index} style={{width: '100%'}}`}> \r\n                    <div className=\"message-block\">\r\n                        {\r\n                            isMyMessage \r\n                            ? <MyMessage message={message}/>\r\n                            :<TheirMessage message={message} lastMessage={messages[lastMessageKey]}/>\r\n                        }\r\n                    </div>\r\n                    <div className=\"read-receipts\" style={{marginRight: isMyMessage ? '18px' : '0', marginLeft: isMyMessage ? '0' : '68px'}}>\r\n                        {renderReadReceipts(message, isMyMessage)}\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    renderMessages()\r\n\r\n    if(!chat) return 'Loading... '\r\n\r\n    const handleStatus = (event) => {\r\n        let user = props.userName;\r\n        console.log(`${user} is typing ...`);\r\n        setStatus(`${user} is typing ...`);\r\n    }\r\n\r\n    const handleKeyUp = (event) => {\r\n        setTimeout(() => {\r\n            setStatus(\"\");\r\n        }, 10000);\r\n    }\r\n\r\n    window.addEventListener('keypress', handleStatus);\r\n    window.addEventListener('keyup', handleKeyUp);\r\n\r\n    return(\r\n        <div className=\"chat-feed\">\r\n            <div className=\"chat-title-container\">\r\n                <div className=\"chat-title\">{chat?.title}</div>\r\n                <div className=\"chat-subtitle\">\r\n                    {chat.people.map((person) => ` ${person.person.username}`)}\r\n                </div>\r\n            </div>\r\n            {renderMessages()}\r\n            <div style={{ height: '100px' }} />\r\n\r\n            <div className=\"message-form-container\">\r\n                <p>{status}</p>\r\n                <MessageForm {...props} chatId={activeChat} onStatus={handleStatus} status={status}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatFeed;","import {ChatEngine} from 'react-chat-engine';\nimport LoginForm from './components/LoginForm'\nimport ChatFeed from './components/ChatFeed';\nimport './App.css';\n\nconst App = () => {\n\n  if (!localStorage.getItem('username')) return < LoginForm />\n  return (\n    <ChatEngine\n      height=\"100vh\"\n      projectID=\"e78b3fc4-b46a-4518-8814-dc5384123473\"\n      userName={localStorage.getItem('username')}\n      userSecret={localStorage.getItem('password')}\n      renderChatFeed={(chatAppProps) => <ChatFeed {...chatAppProps} />}\n    />\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.js';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}