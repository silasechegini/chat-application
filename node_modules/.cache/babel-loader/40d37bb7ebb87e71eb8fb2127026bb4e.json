{"ast":null,"code":"import _slicedToArray from\"E:/JScriptRepo/chat_application/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState}from'react';import{sendMessage,isTyping}from'react-chat-engine';import{SendOutlined,PictureOutlined}from'@ant-design/icons';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var MessageForm=function MessageForm(props){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),value=_useState2[0],setValue=_useState2[1];var chatId=props.chatId,creds=props.creds,userName=props.userName;var handleSubmit=function handleSubmit(event){event.preventDefault();var text=value.trim();if(text.length>0)sendMessage(creds,chatId,{text:text});setValue(' ');};var handleChange=function handleChange(event){setValue(event.target.value);isTyping(props,chatId);};var handleUpload=function handleUpload(event){sendMessage(creds,chatId,{files:event.target.files,text:''});};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{children:props.status}),/*#__PURE__*/_jsxs(\"form\",{className:\"message-form\",onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{className:\"message-input\",placeholder:\"send a message\",value:value,onChange:handleChange,onSubmit:handleSubmit}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"upload-button\",children:/*#__PURE__*/_jsx(\"span\",{className:\"image-button\",children:/*#__PURE__*/_jsx(PictureOutlined,{className:\"picture-icon\"})})}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",multiple:false,id:\"upload-button\",style:{display:'none'},onChange:handleUpload}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"send-button\",children:/*#__PURE__*/_jsx(SendOutlined,{className:\"send-icon\"})})]})]});};export default MessageForm;","map":{"version":3,"sources":["E:/JScriptRepo/chat_application/src/components/MessageForm.jsx"],"names":["useState","sendMessage","isTyping","SendOutlined","PictureOutlined","MessageForm","props","value","setValue","chatId","creds","userName","handleSubmit","event","preventDefault","text","trim","length","handleChange","target","handleUpload","files","status","display"],"mappings":"sJAAA,OAAQA,QAAR,KAAuB,OAAvB,CACA,OAAQC,WAAR,CAAqBC,QAArB,KAAoC,mBAApC,CACA,OAAQC,YAAR,CAAsBC,eAAtB,KAA6C,mBAA7C,C,wFAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,KAAD,CAAW,eACDN,QAAQ,CAAC,EAAD,CADP,wCACpBO,KADoB,eACbC,QADa,kBAEpBC,CAAAA,MAFoB,CAEOH,KAFP,CAEpBG,MAFoB,CAEZC,KAFY,CAEOJ,KAFP,CAEZI,KAFY,CAELC,QAFK,CAEOL,KAFP,CAELK,QAFK,CAI3B,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAAW,CAC5BA,KAAK,CAACC,cAAN,GAEA,GAAMC,CAAAA,IAAI,CAAGR,KAAK,CAACS,IAAN,EAAb,CAEA,GAAGD,IAAI,CAACE,MAAL,CAAc,CAAjB,CAAoBhB,WAAW,CAACS,KAAD,CAAQD,MAAR,CAAgB,CAACM,IAAI,CAAJA,IAAD,CAAhB,CAAX,CAEpBP,QAAQ,CAAC,GAAD,CAAR,CAEH,CATD,CAWA,GAAMU,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACL,KAAD,CAAW,CAC5BL,QAAQ,CAACK,KAAK,CAACM,MAAN,CAAaZ,KAAd,CAAR,CACAL,QAAQ,CAACI,KAAD,CAAQG,MAAR,CAAR,CACH,CAHD,CAKA,GAAMW,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACP,KAAD,CAAW,CAC5BZ,WAAW,CAACS,KAAD,CAAQD,MAAR,CAAgB,CAACY,KAAK,CAAER,KAAK,CAACM,MAAN,CAAaE,KAArB,CAA4BN,IAAI,CAAE,EAAlC,CAAhB,CAAX,CACH,CAFD,CAIA,mBACI,oCACI,mBAAIT,KAAK,CAACgB,MAAV,EADJ,cAEI,cAAM,SAAS,CAAC,cAAhB,CAA+B,QAAQ,CAAEV,YAAzC,wBACI,cACI,SAAS,CAAC,eADd,CAEI,WAAW,CAAC,gBAFhB,CAGI,KAAK,CAAEL,KAHX,CAII,QAAQ,CAAEW,YAJd,CAKI,QAAQ,CAAEN,YALd,EADJ,cASI,cAAO,OAAO,CAAC,eAAf,uBACI,aAAM,SAAS,CAAC,cAAhB,uBACI,KAAC,eAAD,EAAiB,SAAS,CAAC,cAA3B,EADJ,EADJ,EATJ,cAcI,cACI,IAAI,CAAC,MADT,CAEI,QAAQ,CAAE,KAFd,CAGI,EAAE,CAAC,eAHP,CAII,KAAK,CAAE,CAACW,OAAO,CAAE,MAAV,CAJX,CAKI,QAAQ,CAAEH,YALd,EAdJ,cAsBI,eAAQ,IAAI,CAAC,QAAb,CAAsB,SAAS,CAAC,aAAhC,uBACI,KAAC,YAAD,EAAc,SAAS,CAAC,WAAxB,EADJ,EAtBJ,GAFJ,GADJ,CA+BH,CAvDD,CAyDA,cAAef,CAAAA,WAAf","sourcesContent":["import {useState} from 'react';\r\nimport {sendMessage, isTyping} from 'react-chat-engine';\r\nimport {SendOutlined, PictureOutlined } from '@ant-design/icons';\r\n\r\nconst MessageForm = (props) => {\r\n    const [value, setValue] = useState('');\r\n    const {chatId, creds, userName} = props;\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const text = value.trim();\r\n\r\n        if(text.length > 0) sendMessage(creds, chatId, {text});\r\n\r\n        setValue(' ');\r\n\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        setValue(event.target.value);\r\n        isTyping(props, chatId);\r\n    }\r\n\r\n    const handleUpload = (event) => {\r\n        sendMessage(creds, chatId, {files: event.target.files, text: ''})\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <p>{props.status}</p>\r\n            <form className=\"message-form\" onSubmit={handleSubmit}>\r\n                <input \r\n                    className=\"message-input\"\r\n                    placeholder=\"send a message\"\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                    onSubmit={handleSubmit}\r\n                />\r\n\r\n                <label htmlFor=\"upload-button\">\r\n                    <span className=\"image-button\">\r\n                        <PictureOutlined className=\"picture-icon\" />\r\n                    </span>\r\n                </label>\r\n                <input \r\n                    type=\"file\"\r\n                    multiple={false}\r\n                    id=\"upload-button\"\r\n                    style={{display: 'none'}}\r\n                    onChange={handleUpload}\r\n                />\r\n\r\n                <button type=\"submit\" className=\"send-button\">\r\n                    <SendOutlined className=\"send-icon\" />\r\n                </button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MessageForm;"]},"metadata":{},"sourceType":"module"}