{"ast":null,"code":"import _objectSpread from\"E:/JScriptRepo/chat_application/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"E:/JScriptRepo/chat_application/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState}from'react';import MessageForm from'./MessageForm';import MyMessage from'./MyMessage';import TheirMessage from'./TheirMessage';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ChatFeed=function ChatFeed(props){var chats=props.chats,activeChat=props.activeChat,userName=props.userName,messages=props.messages;var chat=chats&&chats[activeChat];var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),status=_useState2[0],setStatus=_useState2[1];var renderReadReceipts=function renderReadReceipts(message,isMyMessage){return chat.people.map(function(person,index){var _person$person;return person.last_read===message.id&&/*#__PURE__*/_jsx(\"div\",{className:\"read-receipt\",style:{float:isMyMessage?'right':'left',backgroundImage:\"url(\".concat(person===null||person===void 0?void 0:(_person$person=person.person)===null||_person$person===void 0?void 0:_person$person.avatar,\")\")}},\"read_\".concat(index));});};var renderMessages=function renderMessages(){var keys=Object.keys(messages);return keys.map(function(key,index){var message=messages[key];var lastMessageKey=index===0?null:keys[index-1];var isMyMessage=userName===message.sender.username;return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"message-block\",children:isMyMessage?/*#__PURE__*/_jsx(MyMessage,{message:message}):/*#__PURE__*/_jsx(TheirMessage,{message:message,lastMessage:messages[lastMessageKey]})}),/*#__PURE__*/_jsx(\"div\",{className:\"read-receipts\",style:{marginRight:isMyMessage?'18px':'0',marginLeft:isMyMessage?'0':'68px'},children:renderReadReceipts(message,isMyMessage)})]},\"msg_\".concat(index,\" style={{width: '100%'}}\"));});};renderMessages();if(!chat)return'Loading... ';var handleStatus=function handleStatus(event){var user=props.userName;console.log(\"\".concat(user,\" is typing ...\"));setStatus(\"\".concat(user,\" is typing ...\"));};var handleKeyUp=function handleKeyUp(event){setTimeout(function(){setStatus(\"\");},10000);};window.addEventListener('keypress',handleStatus);window.addEventListener('keyup',handleKeyUp);return/*#__PURE__*/_jsxs(\"div\",{className:\"chat-feed\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"chat-title-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"chat-title\",children:chat===null||chat===void 0?void 0:chat.title}),/*#__PURE__*/_jsx(\"div\",{className:\"chat-subtitle\",children:chat.people.map(function(person){return\" \".concat(person.person.username);})})]}),renderMessages(),/*#__PURE__*/_jsx(\"div\",{style:{height:'100px'}}),/*#__PURE__*/_jsxs(\"div\",{className:\"message-form-container\",children:[/*#__PURE__*/_jsx(\"p\",{children:status}),/*#__PURE__*/_jsx(MessageForm,_objectSpread(_objectSpread({},props),{},{chatId:activeChat,onStatus:handleStatus,status:status}))]})]});};export default ChatFeed;","map":{"version":3,"sources":["E:/JScriptRepo/chat_application/src/components/ChatFeed.jsx"],"names":["useState","MessageForm","MyMessage","TheirMessage","ChatFeed","props","chats","activeChat","userName","messages","chat","status","setStatus","renderReadReceipts","message","isMyMessage","people","map","person","index","last_read","id","float","backgroundImage","avatar","renderMessages","keys","Object","key","lastMessageKey","sender","username","marginRight","marginLeft","handleStatus","event","user","console","log","handleKeyUp","setTimeout","window","addEventListener","title","height"],"mappings":"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","sourcesContent":["import { useState } from 'react';\r\nimport MessageForm from './MessageForm';\r\nimport MyMessage from './MyMessage';\r\nimport TheirMessage from './TheirMessage';\r\n\r\n\r\nconst ChatFeed = (props) => {\r\n\r\n    const {chats, activeChat, userName, messages} = props;\r\n\r\n    const chat = chats && chats[activeChat];\r\n\r\n    const [status, setStatus] = useState(\"\");\r\n\r\n    const renderReadReceipts = (message, isMyMessage) => {\r\n        return chat.people.map((person, index) => person.last_read === message.id && (\r\n            <div \r\n                key={`read_${index}`}\r\n                className=\"read-receipt\"\r\n                style={{float: isMyMessage? 'right' : 'left', backgroundImage: `url(${person?.person?.avatar})`}}\r\n            />\r\n        ))\r\n    }\r\n\r\n    const renderMessages = () => {\r\n        const keys = Object.keys(messages);\r\n\r\n        return keys.map((key, index) => {\r\n            const message = messages[key];\r\n            const lastMessageKey = index === 0? null : keys[index - 1];\r\n            const isMyMessage = userName === message.sender.username;\r\n\r\n            return (\r\n                <div key={`msg_${index} style={{width: '100%'}}`}> \r\n                    <div className=\"message-block\">\r\n                        {\r\n                            isMyMessage \r\n                            ? <MyMessage message={message}/>\r\n                            :<TheirMessage message={message} lastMessage={messages[lastMessageKey]}/>\r\n                        }\r\n                    </div>\r\n                    <div className=\"read-receipts\" style={{marginRight: isMyMessage ? '18px' : '0', marginLeft: isMyMessage ? '0' : '68px'}}>\r\n                        {renderReadReceipts(message, isMyMessage)}\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    renderMessages()\r\n\r\n    if(!chat) return 'Loading... '\r\n\r\n    const handleStatus = (event) => {\r\n        let user = props.userName;\r\n        console.log(`${user} is typing ...`);\r\n        setStatus(`${user} is typing ...`);\r\n    }\r\n\r\n    const handleKeyUp = (event) => {\r\n        setTimeout(() => {\r\n            setStatus(\"\");\r\n        }, 10000);\r\n    }\r\n\r\n    window.addEventListener('keypress', handleStatus);\r\n    window.addEventListener('keyup', handleKeyUp);\r\n\r\n    return(\r\n        <div className=\"chat-feed\">\r\n            <div className=\"chat-title-container\">\r\n                <div className=\"chat-title\">{chat?.title}</div>\r\n                <div className=\"chat-subtitle\">\r\n                    {chat.people.map((person) => ` ${person.person.username}`)}\r\n                </div>\r\n            </div>\r\n            {renderMessages()}\r\n            <div style={{ height: '100px' }} />\r\n\r\n            <div className=\"message-form-container\">\r\n                <p>{status}</p>\r\n                <MessageForm {...props} chatId={activeChat} onStatus={handleStatus} status={status}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatFeed;"]},"metadata":{},"sourceType":"module"}