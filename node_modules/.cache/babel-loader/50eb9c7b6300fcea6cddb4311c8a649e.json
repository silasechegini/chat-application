{"ast":null,"code":"var _jsxFileName = \"E:\\\\JScriptRepo\\\\chat_application\\\\src\\\\components\\\\ChatFeed.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport MessageForm from './MessageForm';\nimport MyMessage from './MyMessage';\nimport TheirMessage from './TheirMessage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChatFeed = props => {\n  _s();\n\n  const {\n    chats,\n    activeChat,\n    userName,\n    messages\n  } = props;\n  const chat = chats && chats[activeChat];\n  const [status, setStatus] = useState(\"\");\n\n  const renderReadReceipts = (message, isMyMessage) => {\n    return chat.people.map((person, index) => {\n      var _person$person;\n\n      return person.last_read === message.id && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"read-receipt\",\n        style: {\n          float: isMyMessage ? 'right' : 'left',\n          backgroundImage: `url(${person === null || person === void 0 ? void 0 : (_person$person = person.person) === null || _person$person === void 0 ? void 0 : _person$person.avatar})`\n        }\n      }, `read_${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }, this);\n    });\n  };\n\n  const renderMessages = () => {\n    const keys = Object.keys(messages);\n    return keys.map((key, index) => {\n      const message = messages[key];\n      const lastMessageKey = index === 0 ? null : keys[index - 1];\n      const isMyMessage = userName === message.sender.username;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-block\",\n          children: isMyMessage ? /*#__PURE__*/_jsxDEV(MyMessage, {\n            message: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 31\n          }, this) : /*#__PURE__*/_jsxDEV(TheirMessage, {\n            message: message,\n            lastMessage: messages[lastMessageKey]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 30\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"read-receipts\",\n          style: {\n            marginRight: isMyMessage ? '18px' : '0',\n            marginLeft: isMyMessage ? '0' : '68px'\n          },\n          children: renderReadReceipts(message, isMyMessage)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)]\n      }, `msg_${index} style={{width: '100%'}}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this);\n    });\n  };\n\n  renderMessages();\n  if (!chat) return 'Loading... ';\n\n  const handleStatus = event => {\n    let user = props.userName;\n    console.log(`${user} is typing ...`);\n    setStatus(`${user} is typing ...`);\n  };\n\n  const handleKeyUp = event => {\n    setTimeout(() => {\n      setStatus(\"\");\n    }, 10000);\n  };\n\n  window.addEventListener('keypress', handleStatus);\n  window.addEventListener('keyup', handleKeyUp);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-feed\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-title-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-title\",\n        children: chat === null || chat === void 0 ? void 0 : chat.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-subtitle\",\n        children: chat.people.map(person => ` ${person.person.username}`)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), renderMessages(), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '100px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MessageForm, { ...props,\n        chatId: activeChat,\n        onStatus: handleStatus,\n        status: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ChatFeed, \"tFQEoWuxTnOS0Tj0020ukhuK2rw=\");\n\n_c = ChatFeed;\nexport default ChatFeed;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatFeed\");","map":{"version":3,"sources":["E:/JScriptRepo/chat_application/src/components/ChatFeed.jsx"],"names":["useState","MessageForm","MyMessage","TheirMessage","ChatFeed","props","chats","activeChat","userName","messages","chat","status","setStatus","renderReadReceipts","message","isMyMessage","people","map","person","index","last_read","id","float","backgroundImage","avatar","renderMessages","keys","Object","key","lastMessageKey","sender","username","marginRight","marginLeft","handleStatus","event","user","console","log","handleKeyUp","setTimeout","window","addEventListener","title","height"],"mappings":"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","sourcesContent":["import { useState } from 'react';\r\nimport MessageForm from './MessageForm';\r\nimport MyMessage from './MyMessage';\r\nimport TheirMessage from './TheirMessage';\r\n\r\n\r\nconst ChatFeed = (props) => {\r\n\r\n    const {chats, activeChat, userName, messages} = props;\r\n\r\n    const chat = chats && chats[activeChat];\r\n\r\n    const [status, setStatus] = useState(\"\");\r\n\r\n    const renderReadReceipts = (message, isMyMessage) => {\r\n        return chat.people.map((person, index) => person.last_read === message.id && (\r\n            <div \r\n                key={`read_${index}`}\r\n                className=\"read-receipt\"\r\n                style={{float: isMyMessage? 'right' : 'left', backgroundImage: `url(${person?.person?.avatar})`}}\r\n            />\r\n        ))\r\n    }\r\n\r\n    const renderMessages = () => {\r\n        const keys = Object.keys(messages);\r\n\r\n        return keys.map((key, index) => {\r\n            const message = messages[key];\r\n            const lastMessageKey = index === 0? null : keys[index - 1];\r\n            const isMyMessage = userName === message.sender.username;\r\n\r\n            return (\r\n                <div key={`msg_${index} style={{width: '100%'}}`}> \r\n                    <div className=\"message-block\">\r\n                        {\r\n                            isMyMessage \r\n                            ? <MyMessage message={message}/>\r\n                            :<TheirMessage message={message} lastMessage={messages[lastMessageKey]}/>\r\n                        }\r\n                    </div>\r\n                    <div className=\"read-receipts\" style={{marginRight: isMyMessage ? '18px' : '0', marginLeft: isMyMessage ? '0' : '68px'}}>\r\n                        {renderReadReceipts(message, isMyMessage)}\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    renderMessages()\r\n\r\n    if(!chat) return 'Loading... '\r\n\r\n    const handleStatus = (event) => {\r\n        let user = props.userName;\r\n        console.log(`${user} is typing ...`);\r\n        setStatus(`${user} is typing ...`);\r\n    }\r\n\r\n    const handleKeyUp = (event) => {\r\n        setTimeout(() => {\r\n            setStatus(\"\");\r\n        }, 10000);\r\n    }\r\n\r\n    window.addEventListener('keypress', handleStatus);\r\n    window.addEventListener('keyup', handleKeyUp);\r\n\r\n    return(\r\n        <div className=\"chat-feed\">\r\n            <div className=\"chat-title-container\">\r\n                <div className=\"chat-title\">{chat?.title}</div>\r\n                <div className=\"chat-subtitle\">\r\n                    {chat.people.map((person) => ` ${person.person.username}`)}\r\n                </div>\r\n            </div>\r\n            {renderMessages()}\r\n            <div style={{ height: '100px' }} />\r\n\r\n            <div className=\"message-form-container\">\r\n                <p>{status}</p>\r\n                <MessageForm {...props} chatId={activeChat} onStatus={handleStatus} status={status}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatFeed;"]},"metadata":{},"sourceType":"module"}