{"ast":null,"code":"var _jsxFileName = \"E:\\\\JScriptRepo\\\\chat_application\\\\src\\\\components\\\\MessageForm.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { sendMessage, isTyping } from 'react-chat-engine';\nimport { SendOutlined, PictureOutlined } from '@ant-design/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MessageForm = props => {\n  _s();\n\n  const [value, setValue] = useState('');\n  const {\n    chatId,\n    creds,\n    userName\n  } = props;\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const text = value.trim();\n    if (text.length > 0) sendMessage(creds, chatId, {\n      text\n    });\n    setValue(' ');\n  };\n\n  const handleChange = event => {\n    setValue(event.target.value);\n    isTyping(props, chatId);\n  };\n\n  const handleUpload = event => {\n    sendMessage(creds, chatId, {\n      files: event.target.files,\n      text: ''\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: props.status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"message-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"message-input\",\n        placeholder: \"send a message\",\n        value: value,\n        onChange: handleChange,\n        onSubmit: handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"upload-button\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"image-button\",\n          children: /*#__PURE__*/_jsxDEV(PictureOutlined, {\n            className: \"picture-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        multiple: false,\n        id: \"upload-button\",\n        style: {\n          display: 'none'\n        },\n        onChange: handleUpload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"send-button\",\n        children: /*#__PURE__*/_jsxDEV(SendOutlined, {\n          className: \"send-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MessageForm, \"A2PXPeq8TepW328gUMM4+o8Xryo=\");\n\n_c = MessageForm;\nexport default MessageForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"MessageForm\");","map":{"version":3,"sources":["E:/JScriptRepo/chat_application/src/components/MessageForm.jsx"],"names":["useState","sendMessage","isTyping","SendOutlined","PictureOutlined","MessageForm","props","value","setValue","chatId","creds","userName","handleSubmit","event","preventDefault","text","trim","length","handleChange","target","handleUpload","files","status","display"],"mappings":";;;AAAA,SAAQA,QAAR,QAAuB,OAAvB;AACA,SAAQC,WAAR,EAAqBC,QAArB,QAAoC,mBAApC;AACA,SAAQC,YAAR,EAAsBC,eAAtB,QAA6C,mBAA7C;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC3B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAACS,IAAAA,MAAD;AAASC,IAAAA,KAAT;AAAgBC,IAAAA;AAAhB,MAA4BL,KAAlC;;AAEA,QAAMM,YAAY,GAAIC,KAAD,IAAW;AAC5BA,IAAAA,KAAK,CAACC,cAAN;AAEA,UAAMC,IAAI,GAAGR,KAAK,CAACS,IAAN,EAAb;AAEA,QAAGD,IAAI,CAACE,MAAL,GAAc,CAAjB,EAAoBhB,WAAW,CAACS,KAAD,EAAQD,MAAR,EAAgB;AAACM,MAAAA;AAAD,KAAhB,CAAX;AAEpBP,IAAAA,QAAQ,CAAC,GAAD,CAAR;AAEH,GATD;;AAWA,QAAMU,YAAY,GAAIL,KAAD,IAAW;AAC5BL,IAAAA,QAAQ,CAACK,KAAK,CAACM,MAAN,CAAaZ,KAAd,CAAR;AACAL,IAAAA,QAAQ,CAACI,KAAD,EAAQG,MAAR,CAAR;AACH,GAHD;;AAKA,QAAMW,YAAY,GAAIP,KAAD,IAAW;AAC5BZ,IAAAA,WAAW,CAACS,KAAD,EAAQD,MAAR,EAAgB;AAACY,MAAAA,KAAK,EAAER,KAAK,CAACM,MAAN,CAAaE,KAArB;AAA4BN,MAAAA,IAAI,EAAE;AAAlC,KAAhB,CAAX;AACH,GAFD;;AAIA,sBACI;AAAA,4BACI;AAAA,gBAAIT,KAAK,CAACgB;AAAV;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAM,MAAA,SAAS,EAAC,cAAhB;AAA+B,MAAA,QAAQ,EAAEV,YAAzC;AAAA,8BACI;AACI,QAAA,SAAS,EAAC,eADd;AAEI,QAAA,WAAW,EAAC,gBAFhB;AAGI,QAAA,KAAK,EAAEL,KAHX;AAII,QAAA,QAAQ,EAAEW,YAJd;AAKI,QAAA,QAAQ,EAAEN;AALd;AAAA;AAAA;AAAA;AAAA,cADJ,eASI;AAAO,QAAA,OAAO,EAAC,eAAf;AAAA,+BACI;AAAM,UAAA,SAAS,EAAC,cAAhB;AAAA,iCACI,QAAC,eAAD;AAAiB,YAAA,SAAS,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cATJ,eAcI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,QAAQ,EAAE,KAFd;AAGI,QAAA,EAAE,EAAC,eAHP;AAII,QAAA,KAAK,EAAE;AAACW,UAAAA,OAAO,EAAE;AAAV,SAJX;AAKI,QAAA,QAAQ,EAAEH;AALd;AAAA;AAAA;AAAA;AAAA,cAdJ,eAsBI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,aAAhC;AAAA,+BACI,QAAC,YAAD;AAAc,UAAA,SAAS,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAtBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA+BH,CAvDD;;GAAMf,W;;KAAAA,W;AAyDN,eAAeA,WAAf","sourcesContent":["import {useState} from 'react';\r\nimport {sendMessage, isTyping} from 'react-chat-engine';\r\nimport {SendOutlined, PictureOutlined } from '@ant-design/icons';\r\n\r\nconst MessageForm = (props) => {\r\n    const [value, setValue] = useState('');\r\n    const {chatId, creds, userName} = props;\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const text = value.trim();\r\n\r\n        if(text.length > 0) sendMessage(creds, chatId, {text});\r\n\r\n        setValue(' ');\r\n\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        setValue(event.target.value);\r\n        isTyping(props, chatId);\r\n    }\r\n\r\n    const handleUpload = (event) => {\r\n        sendMessage(creds, chatId, {files: event.target.files, text: ''})\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <p>{props.status}</p>\r\n            <form className=\"message-form\" onSubmit={handleSubmit}>\r\n                <input \r\n                    className=\"message-input\"\r\n                    placeholder=\"send a message\"\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                    onSubmit={handleSubmit}\r\n                />\r\n\r\n                <label htmlFor=\"upload-button\">\r\n                    <span className=\"image-button\">\r\n                        <PictureOutlined className=\"picture-icon\" />\r\n                    </span>\r\n                </label>\r\n                <input \r\n                    type=\"file\"\r\n                    multiple={false}\r\n                    id=\"upload-button\"\r\n                    style={{display: 'none'}}\r\n                    onChange={handleUpload}\r\n                />\r\n\r\n                <button type=\"submit\" className=\"send-button\">\r\n                    <SendOutlined className=\"send-icon\" />\r\n                </button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MessageForm;"]},"metadata":{},"sourceType":"module"}